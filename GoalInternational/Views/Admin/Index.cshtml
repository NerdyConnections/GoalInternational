@model GoalInternational.Models.SupportModel

@{
    Layout = "~/Views/Shared/_LoginMaster.cshtml";
}

<div class="pnl-portal">
    <div class="row">
        <div class="col-md-12">
            @Html.ActionLink(GoalInternational.Languages.Shared_Layout.G20, "ExportToExcel", "Admin", null, new { @class = "btn btn-primary btn-large", style="color:#ffffff" })
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">

            @using (Html.BeginForm("AddPrincipalInvestigator", "Admin", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
            {

                @Html.AntiForgeryToken()
                <div class="row" style="border:5px solid #036; margin:10px; padding:10px; padding-top:15px">
                    <div class="form-group form-group-sm col-sm-6">
                        <label class="" title="@GoalInternational.Languages.Support.G8">@GoalInternational.Languages.Support.G8*:</label>
                        @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", @id = "txtFirstName", @placeholder = "" })
                        @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "errorMssg" })
                    </div>
                    <div class="form-group form-group-sm col-sm-6">
                        <label class="" title="@GoalInternational.Languages.Support.G9">@GoalInternational.Languages.Support.G9*:</label>
                        @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", @id = "txtLastName", @placeholder = "" })
                        @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "errorMssg" })
                    </div>
                    <div class="form-group form-group-sm col-sm-6">
                        <label class="" title="@GoalInternational.Languages.Support.G10">@GoalInternational.Languages.Support.G10*:</label>
                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @id = "txtEmail", @placeholder = "" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "errorMssg" })
                    </div>
                    <div class="form-group form-group-sm col-sm-6">
                        <label class="" title="@GoalInternational.Languages.Support.G11">@GoalInternational.Languages.Support.G11*:</label>
                        @Html.TextBoxFor(model => model.ConfirmedEmail, new { @class = "form-control", @id = "txtConfirmedEmail", @placeholder = "" })
                        @Html.ValidationMessageFor(m => m.ConfirmedEmail, "", new { @class = "errorMssg" })
                    </div>

                    <div><input type="submit" class="form-control btn btn-primary btn-sm" value="@GoalInternational.Languages.Support.G7" /></div>
                   <div id="SystemMsg"></div>
                </div>

            }

            <script>
    var addedSuccess = true;
    function SubmitForm(form) {
        $.validator.unobtrusive.parse(form);

        //event.preventDefault();  //prevent form become invalid
        if ($(form).valid()) {
            $.ajax({
                type: "POST",
                url: form.action,
                data: $(form).serialize(),
                datatype: 'json',
            }).done(function (data) {
                debugger;
                if (data.success == "true") {
                    $("#SystemMsg").html("<b>User Added Successfully!</b>");
                   
                    addedSuccess = true;
                } else {
                    $("#SystemMsg").html("<b><font color=\"red\">User Existed, this user cannot be added to the  database</b></font>");
                    addedSuccess = false;
                }

               
            });
        }
        return false;
    }


    $(document).ready(function () {
        $('#myModal').on('hidden.bs.modal', function () {
            if (addedSuccess) {
                $(this).closest('form').find("input[type=text]").val("");
            }
        })

    });
            </script>

        </div>
    </div>
</div>
